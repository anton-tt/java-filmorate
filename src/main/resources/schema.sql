CREATE TABLE IF NOT EXISTS FILMS (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(50) NOT NULL,
	DESCRIPTION CHARACTER VARYING(200) NOT NULL,
	RELEASEDATE DATE NOT NULL,
	DURATION INTEGER NOT NULL,
	RATING_ID INTEGER NOT NULL,
	CONSTRAINT FILMS_PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS USERS (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	EMAIL CHARACTER VARYING(50) NOT NULL,
	LOGIN CHARACTER VARYING(50) NOT NULL,
	NAME CHARACTER VARYING(50),
	BIRTHDAY DATE NOT NULL,
	CONSTRAINT USERS_PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS RATING (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME INTEGER NOT NULL,
	CONSTRAINT RATING_PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS GENRE (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(50) NOT NULL,
	CONSTRAINT GENRE_PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS FILM_GENRE (
	FILM_ID INTEGER,
	GENRE_ID INTEGER,
	CONSTRAINT FILM_GENRE_PK PRIMARY KEY (FILM_ID,GENRE_ID),
	CONSTRAINT FILM_GENRE_FK_1 FOREIGN KEY (FILM_ID) REFERENCES FILMS(ID) ON DELETE CASCADE,
	CONSTRAINT FILM_GENRE_FK_2 FOREIGN KEY (GENRE_ID) REFERENCES GENRE(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS LIKES (
	FILM_ID INTEGER,
	USER_ID INTEGER,
	CONSTRAINT LIKES_PK PRIMARY KEY (FILM_ID,USER_ID),
	CONSTRAINT LIKES_FK_1 FOREIGN KEY (FILM_ID) REFERENCES FILMS(ID) ON DELETE CASCADE,
	CONSTRAINT LIKES_FK_2 FOREIGN KEY (USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS FRIENDSHIP (
	USER_ONE_ID INTEGER,
	USE_TWO_ID INTEGER,
	CONSTRAINT FRIENDSHIP_PK PRIMARY KEY (USER_ONE_ID,USE_TWO_ID),
	CONSTRAINT FRIENDSHIP_FK_1 FOREIGN KEY (USER_ONE_ID) REFERENCES USERS(ID) ON DELETE CASCADE,
	CONSTRAINT FRIENDSHIP_FK_2 FOREIGN KEY (USE_TWO_ID) REFERENCES USERS(ID) ON DELETE CASCADE
);